//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: inboxTypes.proto

package il.ac.technion.cs.softwaredesign;

@kotlin.jvm.JvmName("-initializemessageP")
inline fun messageP(block: il.ac.technion.cs.softwaredesign.MessagePKt.Dsl.() -> kotlin.Unit): il.ac.technion.cs.softwaredesign.MessageP =
  il.ac.technion.cs.softwaredesign.MessagePKt.Dsl._create(il.ac.technion.cs.softwaredesign.MessageP.newBuilder()).apply { block() }._build()
object MessagePKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: il.ac.technion.cs.softwaredesign.MessageP.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: il.ac.technion.cs.softwaredesign.MessageP.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): il.ac.technion.cs.softwaredesign.MessageP = _builder.build()

    /**
     * <code>string id = 1;</code>
     */
    var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 1;</code>
     */
    fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>string from = 2;</code>
     */
    var from: kotlin.String
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * <code>string from = 2;</code>
     */
    fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * <code>string message = 3;</code>
     */
    var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>string message = 3;</code>
     */
    fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <code>.google.protobuf.Timestamp timeSent = 4;</code>
     */
    var timeSent: com.google.protobuf.Timestamp
      @JvmName("getTimeSent")
      get() = _builder.getTimeSent()
      @JvmName("setTimeSent")
      set(value) {
        _builder.setTimeSent(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timeSent = 4;</code>
     */
    fun clearTimeSent() {
      _builder.clearTimeSent()
    }
    /**
     * <code>.google.protobuf.Timestamp timeSent = 4;</code>
     * @return Whether the timeSent field is set.
     */
    fun hasTimeSent(): kotlin.Boolean {
      return _builder.hasTimeSent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun il.ac.technion.cs.softwaredesign.MessageP.copy(block: il.ac.technion.cs.softwaredesign.MessagePKt.Dsl.() -> kotlin.Unit): il.ac.technion.cs.softwaredesign.MessageP =
  il.ac.technion.cs.softwaredesign.MessagePKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val il.ac.technion.cs.softwaredesign.MessagePOrBuilder.timeSentOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimeSent()) getTimeSent() else null

